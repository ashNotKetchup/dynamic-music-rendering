{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Initial architecture (max \'97> remote websocket server \'96-> renderers)\
\
npm install kill-port, and live-server\
\
Kill existing processes\
- npx kill-port 8080\
\
Start server\
- cd remote\
- node server.js\
\
navigate to root\
- cd ~ (i think lol)\
\
Start server\
- live-sever\
\
\
Now using max websockets: (max and remote websocket server  \'97> renderer)\
\
Start serving the site on live server\
\
kill port/processes\
\
Open max file \'93MaxSendWebsockets\'94\
\
Start the script\
\
send data, which is broadcast everywhere\'85.\
\
\
TODO: \
\
Send json to d3, update graph accordingly\
Automate this setup process\
change data structure to have meaningful attributes\
Increase font size and sort out design\
Filtering?\
\
}